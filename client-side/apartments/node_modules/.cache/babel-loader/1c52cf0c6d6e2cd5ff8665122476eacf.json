{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Log_In.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet date = new Date();\n\nfunction Log_In(props) {\n  _s();\n\n  const [password_value, setPassword_value] = useState(\"\");\n  const [user_name_value, setUser_name_value] = useState(\"\");\n  let navigate = useNavigate();\n\n  function savePasswordValue(val) {\n    setPassword_value(val);\n  }\n\n  function saveUsernameValue(val) {\n    setUser_name_value(val);\n  } // async function getfetch(url) {\n  //     try {\n  //         let res = await fetch(url);\n  //         return await res.json();\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n\n  async function checkIntegrity() {\n    let myuser;\n\n    try {\n      if (password_value === '' || user_name_value === \"\") {\n        alert(\"password or username are empty\");\n      } else {\n        let flag = await fetch(`http://localhost:3678/customer/getcustomers`, {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: user_name_value,\n            password: password_value\n          })\n        }); //bring array of customers that hav this specific name\n        // let flag = false;\n        // users.forEach((element, i) => {\n        //     if ((users[i].costemerID) === password_value) {\n        //         flag = true;\n        //          myuser=users[i];\n        //     }\n        // });\n\n        flag = await flag.json();\n\n        if (!flag) {\n          alert(\"the password or username do not exist\");\n        } else {\n          //  fetch(`http://localhost:3000/customers?username=${user_name_value}`,{\n          //      method:'POST'});\n          if (\"manager\" === user_name_value && \"96899\" === password_value) {\n            navigate(`/manager`);\n          } else {\n            navigate(`/Client`);\n          } // if (localStorage.getItem(\"user\")) {\n\n\n          sessionStorage.setItem(\"currentuser\", JSON.stringify({\n            password: password_value,\n            user_name: user_name_value,\n            cart: []\n          }));\n          let a = sessionStorage.getItem(\"currentuser\");\n          console.log(JSON.parse(a));\n          let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password\n            })\n          });\n          let pro = await prod.json();\n\n          if (pro.length) {} // }\n          // else {\n          //     localStorage.setItem(\"user\", JSON.stringify(users));\n          //     props.define_user(users);\n          //     navigate(\"/user\");\n          // }\n\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    savePasswordValue(\"\");\n    saveUsernameValue(\"\");\n  } //     let [aa,setaa]=useState(\"\");\n  // useEffect(()=>{func()},[]);\n  //     const func=async()=>{\n  //         debugger;\n  //         let a=await fetch(\"http://localhost:3000/signin/\");\n  //      a= await a.json();\n  //    console.log(a);\n  //         setaa(a);\n  //         console.log(aa);\n  //     }\n\n\n  let cur = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n  useEffect(() => {\n    function manage() {\n      alert(\"you cannot go back to sign in/log in. You are already registered as a user!\");\n\n      if (\"manager\" === cur.user_name && \"96899\" === cur.password) {\n        navigate(`/manager`);\n      } else {\n        navigate(`/Client`);\n      }\n    }\n\n    if (cur) {\n      manage();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hero-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contain-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(\"/signin\");\n                },\n                children: \"sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"input\",\n                className: \"form-control\",\n                value: user_name_value,\n                onChange: e => {\n                  saveUsernameValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                value: password_value,\n                onChange: e => {\n                  savePasswordValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                onClick: checkIntegrity,\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Log_In, \"wVIskojxGU540Hl9QoR8YK6oOJk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Log_In;\nexport default Log_In;\n\nvar _c;\n\n$RefreshReg$(_c, \"Log_In\");","map":{"version":3,"names":["useState","useEffect","useNavigate","date","Date","Log_In","props","password_value","setPassword_value","user_name_value","setUser_name_value","navigate","savePasswordValue","val","saveUsernameValue","checkIntegrity","myuser","alert","flag","fetch","method","headers","body","JSON","stringify","username","password","json","sessionStorage","setItem","user_name","cart","a","getItem","console","log","parse","prod","pro","length","error","cur","manage","e","target","value"],"sources":["F:/client-side/apartments/src/components/Log_In.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nlet date = new Date();\r\nfunction Log_In(props) {\r\n    const [password_value, setPassword_value] = useState(\"\");\r\n    const [user_name_value, setUser_name_value] = useState(\"\");\r\n    let navigate = useNavigate();\r\n\r\n    function savePasswordValue(val) {\r\n        setPassword_value(val);\r\n    }\r\n\r\n    function saveUsernameValue(val) {\r\n        setUser_name_value(val);\r\n    }\r\n\r\n    // async function getfetch(url) {\r\n    //     try {\r\n    //         let res = await fetch(url);\r\n    //         return await res.json();\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    async function checkIntegrity() {\r\n        let myuser;\r\n        try {\r\n\r\n            if (password_value === '' || user_name_value === \"\") {\r\n                alert(\"password or username are empty\");\r\n            } else {\r\n                let flag = await fetch(`http://localhost:3678/customer/getcustomers`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ username: user_name_value, password: password_value })\r\n                });//bring array of customers that hav this specific name\r\n                // let flag = false;\r\n                // users.forEach((element, i) => {\r\n                //     if ((users[i].costemerID) === password_value) {\r\n                //         flag = true;\r\n                //          myuser=users[i];\r\n                //     }\r\n                // });\r\n                flag = await flag.json();\r\n                if (!flag) {\r\n                    alert(\"the password or username do not exist\");\r\n                } else {\r\n                    //  fetch(`http://localhost:3000/customers?username=${user_name_value}`,{\r\n                    //      method:'POST'});\r\n                    if (\"manager\" === user_name_value && \"96899\" === password_value) {\r\n                        navigate(`/manager`);\r\n                    }else{\r\n                        navigate(`/Client`);\r\n                    }\r\n                    // if (localStorage.getItem(\"user\")) {\r\n                    sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: password_value, user_name: user_name_value,cart:[] }));\r\n                    let a = sessionStorage.getItem(\"currentuser\");\r\n                    console.log(JSON.parse(a));\r\n                    let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({ password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password })\r\n                    });\r\n                    let pro = await prod.json();\r\n                    if(pro.length){}\r\n                    // }\r\n\r\n                    // else {\r\n                    //     localStorage.setItem(\"user\", JSON.stringify(users));\r\n                    //     props.define_user(users);\r\n                    //     navigate(\"/user\");\r\n                    // }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        savePasswordValue(\"\");\r\n        saveUsernameValue(\"\");\r\n    }\r\n    //     let [aa,setaa]=useState(\"\");\r\n    // useEffect(()=>{func()},[]);\r\n    //     const func=async()=>{\r\n    //         debugger;\r\n    //         let a=await fetch(\"http://localhost:3000/signin/\");\r\n    //      a= await a.json();\r\n    //    console.log(a);\r\n    //         setaa(a);\r\n    //         console.log(aa);\r\n    //     }\r\n    let cur =JSON.parse( sessionStorage.getItem(\"currentuser\"));\r\n    useEffect(() => {\r\n        function manage() {\r\n            alert(\"you cannot go back to sign in/log in. You are already registered as a user!\");\r\n            if (\"manager\" === cur.user_name && \"96899\" ===cur.password) {\r\n                navigate(`/manager`);\r\n            }\r\n            else{\r\n                navigate(`/Client`);\r\n            }\r\n        }\r\n        if (cur) {\r\n            manage();\r\n        }\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {/* <h1>login client</h1>\r\n            <h1>{aa}</h1> */}\r\n            <div id=\"hero-background\"></div>\r\n            <div id=\"main-wrapper\">\r\n                <div className=\"form-section\">\r\n                    <div className=\"contain-wrapper\">\r\n                        <div className=\"form\">\r\n                            <div className=\"form-header\">\r\n                            </div>\r\n                            <div className=\"form-contain\">\r\n                                <button onClick={() => { navigate(\"/signin\"); }}>sign in</button>\r\n                                <input type=\"input\" className=\"form-control\" value={user_name_value} onChange={(e) => { saveUsernameValue(e.target.value) }} id={date} placeholder=\"username\"></input>\r\n                                <input type=\"email\" className=\"form-control\" value={password_value} onChange={(e) => { savePasswordValue(e.target.value) }} id={date} placeholder=\"email\"></input>\r\n                                <div className=\"btn\" onClick={checkIntegrity}>\r\n                                    login\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Log_In;"],"mappings":"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"},"metadata":{},"sourceType":"module"}