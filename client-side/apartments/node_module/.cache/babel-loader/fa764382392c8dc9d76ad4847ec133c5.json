{"ast":null,"code":"var _jsxFileName = \"E:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Manager_Product_List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport My_Manager from \"./My_Manager\";\nimport Nav from \"./Nav\";\nimport Manager_Current_Product from \"./Manager_Current_Product\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Manager_Product_List(props) {\n  _s();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const [client, setClient] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [mystyle, setMystyle] = useState({});\n  const [categories, setCategories] = useState(\"\");\n\n  async function getProducts() {\n    let prod = await fetch(\"http://localhost:3000/products\", {\n      method: 'GET'\n    });\n    let pro = await prod.json();\n    setProducts(pro);\n    setMystyle({\n      color: \"#3aedff\",\n      fontSize: \"20px\",\n      marginLeft: \"330px\",\n      marginTop: \"70PX\"\n    });\n  }\n\n  useEffect(() => {\n    getProducts();\n  }, []); // async function buymyproduct(myproduct) {\n  //     let prod = await fetch(\"http://localhost:3000/client{}/shopingCart\", {\n  //         method: 'POST',\n  //         headers: {\n  //             'Accept': 'application/json',\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: { myproduct }\n  //     });\n  //     let pro = await prod.json();\n  // }\n\n  async function delete_item(name) {\n    let produc = await fetch(`http://localhost:3000/products/itemname/${name}`, {\n      method: 'GET'\n    });\n    let mypro = await produc.json();\n\n    if (!mypro) {\n      let prod = await fetch(`http://localhost:3000/products/${name}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        } // body: { myproduct }\n\n      });\n      let pro = await prod.json();\n    } else {\n      alert(\"cannot delete item.item is Ordered by client and still not delivered\");\n    } // if (pro) {\n    //     alert(\"hoooraayyyyyyy!!!!!! item has been deleted!!\");\n    // }else{\n    //     alert(\"bad news :( item has failed to be deleted...:(\");\n    // }\n\n\n    getProducts();\n  }\n\n  async function categoryType(val) {\n    setCategory(val);\n    console.log(`val ${val}`);\n    let codeC = await fetch(`http://localhost:3000/products/${val}`, {\n      method: 'GET'\n    });\n    let codeCateg = await codeC.json();\n    let catItems = await fetch(`http://localhost:3000/products/category/${codeCateg[0].CategoryCode}`, {\n      method: 'GET'\n    });\n    let allCatItems = await catItems.json();\n    console.log(allCatItems);\n    setProducts(allCatItems);\n  }\n\n  ;\n\n  async function getcategories() {\n    let categor = await fetch(`http://localhost:3000/products/allcategories`, {\n      method: 'GET'\n    });\n    let allCategorItems = await categor.json();\n    setCategories(allCategorItems);\n  }\n\n  async function updating_item(name) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"all items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"categories: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        categoryType(e.target.value);\n      },\n      children: [getcategories(), categories.map(myproduct => /*#__PURE__*/_jsxDEV(\"div\", {}, myproduct.ItemName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 22\n      }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"heels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"flat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"sneakers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"sandals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"boots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"slippers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), products.map(myproduct => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [myproduct.ItemName, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          delete_item(myproduct.ItemName);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updating_item(myproduct.ItemName);\n        },\n        children: \"updating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, myproduct.ItemName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 18\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Manager_Product_List, \"Y3g6aBjJlaR5OITK6Bg379aR6Gc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Manager_Product_List;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manager_Product_List\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","My_Manager","Nav","Manager_Current_Product","Manager_Product_List","props","location","navigate","products","setProducts","client","setClient","category","setCategory","mystyle","setMystyle","categories","setCategories","getProducts","prod","fetch","method","pro","json","color","fontSize","marginLeft","marginTop","delete_item","name","produc","mypro","headers","alert","categoryType","val","console","log","codeC","codeCateg","catItems","CategoryCode","allCatItems","getcategories","categor","allCategorItems","updating_item","e","target","value","map","myproduct","ItemName"],"sources":["E:/client-side/apartments/src/components/Manager_Product_List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport My_Manager from \"./My_Manager\";\r\nimport Nav from \"./Nav\"\r\nimport Manager_Current_Product from \"./Manager_Current_Product\"\r\nimport '../App.css';\r\nexport default function Manager_Product_List(props) {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [products, setProducts] = useState([]);\r\n    const [client, setClient] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [mystyle, setMystyle] = useState({});\r\n    const [categories, setCategories] = useState(\"\");\r\n\r\n    async function getProducts() {\r\n        let prod = await fetch(\"http://localhost:3000/products\", {\r\n            method: 'GET'\r\n        });\r\n        let pro = await prod.json();\r\n        setProducts(pro);\r\n        setMystyle({\r\n            color: \"#3aedff\",\r\n            fontSize: \"20px\", marginLeft: \"330px\",\r\n            marginTop: \"70PX\"\r\n        });\r\n    }\r\n    useEffect(() => {\r\n\r\n        getProducts();\r\n    }, []);\r\n    // async function buymyproduct(myproduct) {\r\n    //     let prod = await fetch(\"http://localhost:3000/client{}/shopingCart\", {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: { myproduct }\r\n    //     });\r\n    //     let pro = await prod.json();\r\n    // }\r\n    async function delete_item(name) {\r\n        let produc = await fetch(`http://localhost:3000/products/itemname/${name}`, {\r\n            method: 'GET'\r\n        });\r\n        let mypro = await produc.json();\r\n        if (!mypro) {\r\n            let prod = await fetch(`http://localhost:3000/products/${name}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                // body: { myproduct }\r\n            });\r\n            let pro = await prod.json();\r\n        } else {\r\n            alert(\"cannot delete item.item is Ordered by client and still not delivered\");\r\n        }\r\n\r\n        // if (pro) {\r\n        //     alert(\"hoooraayyyyyyy!!!!!! item has been deleted!!\");\r\n        // }else{\r\n        //     alert(\"bad news :( item has failed to be deleted...:(\");\r\n        // }\r\n        getProducts();\r\n    }\r\n    async function categoryType(val) {\r\n        setCategory(val);\r\n        console.log(`val ${val}`);\r\n        let codeC = await fetch(`http://localhost:3000/products/${val}`, {\r\n            method: 'GET'\r\n        });\r\n        let codeCateg = await codeC.json();\r\n\r\n        let catItems = await fetch(`http://localhost:3000/products/category/${codeCateg[0].CategoryCode}`, {\r\n            method: 'GET'\r\n        });\r\n        let allCatItems = await catItems.json();\r\n        console.log(allCatItems);\r\n        setProducts(allCatItems);\r\n    };\r\n    async function getcategories() {\r\n        let categor = await fetch(`http://localhost:3000/products/allcategories`, {\r\n            method: 'GET'\r\n        });\r\n        let allCategorItems = await categor.json();\r\n        setCategories(allCategorItems);\r\n    }\r\n    async function updating_item(name) {\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <p>all items</p>\r\n            {/* <div>{products.map((product) => product.ItemName)}</div> */}\r\n            <br></br>\r\n            <label>categories: </label>\r\n            {/* <select onChange={(e)=>{setCategory(e.target.value)}}> */}\r\n            <select onChange={(e) => { categoryType(e.target.value) }}>\r\n                {getcategories()}\r\n                {categories.map((myproduct) =>\r\n                    (<div key={myproduct.ItemName}>\r\n                    </div>)\r\n                )}\r\n                <option>heels</option>\r\n                <option>flat</option>\r\n                <option>sneakers</option>\r\n                <option>sandals</option>\r\n                <option>boots</option>\r\n                <option>slippers</option>\r\n            </select>\r\n            <br></br>{products.map((myproduct) =>\r\n                (<div key={myproduct.ItemName}>\r\n                    {myproduct.ItemName}\r\n                    <button onClick={() => { delete_item(myproduct.ItemName) }}>delete</button>\r\n                    <button onClick={() => { updating_item(myproduct.ItemName) }}>updating</button>\r\n                    {/* <button>add to shopping cart</button> */}\r\n                </div>)\r\n            )}\r\n            {/* <button onClick={(e) => { buymyproduct(e.target.value) }}>ADD TO SHOPING CART</button> */}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}