{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Sign_In.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css'; // import Nav from \"./Nav\";\n\nimport My_Manager from \"./My_Manager\";\nimport Manager_Add_Product from \"./Manager_Add_Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet date = new Date();\n\nfunction Sign_In(props) {\n  _s();\n\n  const [password_value, setPassword_value] = useState(\"\");\n  const [user_name_value, setUser_name_value] = useState(\"\"); // const [current, setcurrent] = useState({password:\"\",name:\"\"});\n\n  let navigate = useNavigate();\n\n  function savePasswordValue(val) {\n    setPassword_value(val);\n  }\n\n  function saveUsernameValue(val) {\n    setUser_name_value(val);\n  } // async function getfetch(url) {\n  //     try {\n  //         let res = await fetch(url);\n  //         return await res.json();\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n\n  async function checkIntegrity() {\n    let myuser;\n\n    try {\n      if (password_value === '' || user_name_value === \"\") {\n        alert(\"email or username are empty\");\n      } else {\n        debugger;\n\n        if (!password_value.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n          alert(\"email is not valid\");\n          setPassword_value(\"\");\n        } else {\n          setPassword_value(password_value); // let users = await getfetch(`https://localhost:3678/customers`);//bring array of customers that hav this specific name/${user_name_value}\n\n          let flag = await fetch(`http://localhost:3678/customer/getcustomers`, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: user_name_value,\n              password: password_value\n            })\n          });\n          flag = await flag.json(); // let flag = false;\n          // if(users)\n          // {\n          //     users.forEach((element, i) => {\n          //     if ((users[i].costemerID) === password_value) {\n          //         flag = true;\n          //         myuser=users[i];\n          //     }\n          //  });\n          // }\n\n          if (!flag) {\n            // alert(\"the password or username do nnnnot exist\");\n            fetch(`http://localhost:3678/customer`, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: user_name_value,\n                password: password_value\n              })\n            });\n            navigate(`/Client`); // navigate(`/manager`);\n\n            sessionStorage.setItem(\"currentuser\", JSON.stringify({\n              password: password_value,\n              user_name: user_name_value,\n              cart: []\n            })); //    cur=   sessionStorage.getItem(\"currentuser\");\n            //     setcurrent(cur);\n            //     console.log(cur);\n            //     console.log(JSON.parse(cur));\n            // console.log(JSON.parse(current));\n            // navigate(`/Client/${password_value}`);\n            // alert(\"the password or username do not exist\");\n          } else {\n            alert(\"the email or username  exist\"); //  fetch(`http://localhost:3678/customers?username=${user_name_value}`,{\n            //      method:'POST'});\n            // if (localStorage.getItem(\"user\")) {\n            // navigate(\"/our_client\");\n            // }\n            // else {\n            //     localStorage.setItem(\"user\", JSON.stringify(users));\n            //     props.define_user(users);\n            //     navigate(\"/user\");\n            // }\n          }\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    savePasswordValue(\"\");\n    saveUsernameValue(\"\");\n  }\n\n  let cur = JSON.parse(sessionStorage.getItem(\"currentuser\")); // if (cur) {\n  // function manage(){\n  //     navigate(`/manager`);\n  // }\n\n  useEffect(() => {\n    function manage() {\n      alert(\"you cannot go back to sign in/log in. You are already registered as a user!\"); // navigate(`/manager`);\n\n      navigate(`/Client`);\n    }\n\n    if (cur) {\n      manage();\n    }\n  }, []); // }else{\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hero-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contain-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(\"/\");\n                },\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"input\",\n                className: \"form-control\",\n                value: user_name_value,\n                onChange: e => {\n                  saveUsernameValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                value: password_value,\n                onChange: e => {\n                  savePasswordValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                onClick: checkIntegrity,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \" sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this); // }\n}\n\n_s(Sign_In, \"wVIskojxGU540Hl9QoR8YK6oOJk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Sign_In;\nexport default Sign_In;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign_In\");","map":{"version":3,"names":["useState","useEffect","useNavigate","My_Manager","Manager_Add_Product","date","Date","Sign_In","props","password_value","setPassword_value","user_name_value","setUser_name_value","navigate","savePasswordValue","val","saveUsernameValue","checkIntegrity","myuser","alert","match","flag","fetch","method","headers","body","JSON","stringify","username","password","json","sessionStorage","setItem","user_name","cart","error","cur","parse","getItem","manage","e","target","value"],"sources":["F:/client-side/apartments/src/components/Sign_In.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../App.css';\r\n// import Nav from \"./Nav\";\r\nimport My_Manager from \"./My_Manager\"\r\nimport Manager_Add_Product from \"./Manager_Add_Product\";\r\n\r\nlet date = new Date();\r\nfunction Sign_In(props) {\r\n    const [password_value, setPassword_value] = useState(\"\");\r\n    const [user_name_value, setUser_name_value] = useState(\"\");\r\n    // const [current, setcurrent] = useState({password:\"\",name:\"\"});\r\n\r\n    let navigate = useNavigate();\r\n\r\n    function savePasswordValue(val) {\r\n        setPassword_value(val);\r\n    }\r\n\r\n    function saveUsernameValue(val) {\r\n        setUser_name_value(val);\r\n    }\r\n\r\n    // async function getfetch(url) {\r\n    //     try {\r\n    //         let res = await fetch(url);\r\n    //         return await res.json();\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    async function checkIntegrity() {\r\n        let myuser;\r\n        try {\r\n            if (password_value === '' || user_name_value === \"\") {\r\n                alert(\"email or username are empty\");\r\n            }\r\n            else {\r\n                debugger\r\n                if (!password_value.match(\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                )) {\r\n                     alert(\"email is not valid\");\r\n                    setPassword_value(\"\");\r\n                }\r\n                else {\r\n                    setPassword_value(password_value);\r\n                   \r\n\r\n                    // let users = await getfetch(`https://localhost:3678/customers`);//bring array of customers that hav this specific name/${user_name_value}\r\n                    let flag = await fetch(`http://localhost:3678/customer/getcustomers`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({ username: user_name_value, password: password_value })\r\n                    });\r\n                    flag = await flag.json();\r\n                    // let flag = false;\r\n                    // if(users)\r\n                    // {\r\n                    //     users.forEach((element, i) => {\r\n                    //     if ((users[i].costemerID) === password_value) {\r\n                    //         flag = true;\r\n                    //         myuser=users[i];\r\n                    //     }\r\n                    //  });\r\n                    // }\r\n\r\n                    if (!flag) {\r\n                        // alert(\"the password or username do nnnnot exist\");\r\n\r\n                        fetch(`http://localhost:3678/customer`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Accept': 'application/json',\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify({\r\n                                username: user_name_value,\r\n                                password: password_value\r\n                            })\r\n                        });\r\n                        navigate(`/Client`);\r\n                        // navigate(`/manager`);\r\n                        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: password_value, user_name: user_name_value, cart: [] }));\r\n                        //    cur=   sessionStorage.getItem(\"currentuser\");\r\n                        //     setcurrent(cur);\r\n                        //     console.log(cur);\r\n                        //     console.log(JSON.parse(cur));\r\n\r\n                        // console.log(JSON.parse(current));\r\n                        // navigate(`/Client/${password_value}`);\r\n                        // alert(\"the password or username do not exist\");\r\n                    } else {\r\n                        alert(\"the email or username  exist\");\r\n                        //  fetch(`http://localhost:3678/customers?username=${user_name_value}`,{\r\n                        //      method:'POST'});\r\n\r\n                        // if (localStorage.getItem(\"user\")) {\r\n                        // navigate(\"/our_client\");\r\n                        // }\r\n                        // else {\r\n                        //     localStorage.setItem(\"user\", JSON.stringify(users));\r\n                        //     props.define_user(users);\r\n                        //     navigate(\"/user\");\r\n                        // }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        savePasswordValue(\"\");\r\n        saveUsernameValue(\"\");\r\n    }\r\n    let cur = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n    // if (cur) {\r\n    // function manage(){\r\n    //     navigate(`/manager`);\r\n    // }\r\n    useEffect(() => {\r\n        function manage() {\r\n            alert(\"you cannot go back to sign in/log in. You are already registered as a user!\")\r\n            // navigate(`/manager`);\r\n            navigate(`/Client`);\r\n        }\r\n        if (cur) {\r\n            manage();\r\n        }\r\n    }, []);\r\n\r\n    // }else{\r\n    return (\r\n        <div>\r\n            <div id=\"hero-background\"></div>\r\n            <div id=\"main-wrapper\">\r\n                <div className=\"form-section\">\r\n                    <div className=\"contain-wrapper\">\r\n                        <div className=\"form\">\r\n                            <div className=\"form-header\">\r\n                            </div>\r\n                            <div className=\"form-contain\">\r\n                                <button onClick={() => { navigate(\"/\"); }}>login</button>\r\n                                <input type=\"input\" className=\"form-control\" value={user_name_value} onChange={(e) => { saveUsernameValue(e.target.value) }} id={date} placeholder=\"username\"></input>\r\n                                <input type=\"email\" className=\"form-control\" value={password_value} onChange={(e) => { savePasswordValue(e.target.value) }} id={date} placeholder=\"email\"></input>\r\n                                <div className=\"btn\" onClick={checkIntegrity}>\r\n                                    <input type=\"button\" value=\" sign in\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    // }\r\n}\r\nexport default Sign_In;"],"mappings":"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"},"metadata":{},"sourceType":"module"}