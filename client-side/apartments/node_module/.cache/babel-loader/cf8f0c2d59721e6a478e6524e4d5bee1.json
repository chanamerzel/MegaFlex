{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Sign_In.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet date = new Date();\n\nfunction Sign_In(props) {\n  _s();\n\n  const [password_value, setPassword_value] = useState(\"\");\n  const [user_name_value, setUser_name_value] = useState(\"\");\n  let navigate = useNavigate();\n\n  function savePasswordValue(val) {\n    setPassword_value(val);\n  }\n\n  function saveUsernameValue(val) {\n    setUser_name_value(val);\n  } // async function getfetch(url) {\n  //     try {\n  //         let res = await fetch(url);\n  //         return await res.json();\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n\n  async function checkIntegrity() {\n    let myuser;\n\n    try {\n      if (password_value === '' || user_name_value === \"\") {\n        alert(\"password or username are empty\");\n      } else {\n        // let users = await getfetch(`https://localhost:3000/customers`);//bring array of customers that hav this specific name/${user_name_value}\n        let flag = await fetch(`https://localhost:3000/getcustomers`, {\n          method: \"\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: user_name_value,\n            password: password_value\n          })\n        }); // let flag = false;\n        // if(users)\n        // {\n        //     users.forEach((element, i) => {\n        //     if ((users[i].costemerID) === password_value) {\n        //         flag = true;\n        //         myuser=users[i];\n        //     }\n        //  });\n        // }\n\n        if (!flag) {\n          alert(\"the password or username do nnnnot exist\"); // fetch(`https://localhost:3000/customers`,{\n          //          method:'POST',\n          //          headers: {\n          //             'Accept': 'application/json',\n          //             'Content-Type': 'application/json'\n          //         },\n          //         body:JSON.stringify({\n          //             username:user_name_value,\n          //             password:password_value\n          //         })\n          //         });\n          //         navigate(`/Client/${myuser.costemerID}`);\n          // alert(\"the password or username do not exist\");\n        } else {\n          alert(\"the password or username  exist\"); //  fetch(`https://localhost:3000/customers?username=${user_name_value}`,{\n          //      method:'POST'});\n          // if (localStorage.getItem(\"user\")) {\n          // navigate(\"/our_client\");\n          // }\n          // else {\n          //     localStorage.setItem(\"user\", JSON.stringify(users));\n          //     props.define_user(users);\n          //     navigate(\"/user\");\n          // }\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    savePasswordValue(\"\");\n    saveUsernameValue(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hero-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contain-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(\"/\");\n                },\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"input\",\n                className: \"form-control\",\n                value: user_name_value,\n                onChange: e => {\n                  saveUsernameValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                value: password_value,\n                onChange: e => {\n                  savePasswordValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                onClick: checkIntegrity,\n                children: \"sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sign_In, \"5yXZq2T0eec3dOMhP9TSgmQxWn0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Sign_In;\nexport default Sign_In;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign_In\");","map":{"version":3,"names":["useState","useNavigate","date","Date","Sign_In","props","password_value","setPassword_value","user_name_value","setUser_name_value","navigate","savePasswordValue","val","saveUsernameValue","checkIntegrity","myuser","alert","flag","fetch","method","headers","body","JSON","stringify","username","password","error","e","target","value"],"sources":["F:/client-side/apartments/src/components/Sign_In.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nlet date = new Date();\r\nfunction Sign_In(props) {\r\n    const [password_value, setPassword_value] = useState(\"\");\r\n    const [user_name_value, setUser_name_value] = useState(\"\");\r\n    let navigate = useNavigate();\r\n\r\n    function savePasswordValue(val) {\r\n        setPassword_value(val);\r\n    }\r\n\r\n    function saveUsernameValue(val) {\r\n        setUser_name_value(val);\r\n    }\r\n\r\n    // async function getfetch(url) {\r\n    //     try {\r\n    //         let res = await fetch(url);\r\n    //         return await res.json();\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    async function checkIntegrity() {\r\n        let myuser;\r\n        try {\r\n            if(password_value===''||user_name_value===\"\"){\r\n                alert(\"password or username are empty\");\r\n            }else{\r\n                // let users = await getfetch(`https://localhost:3000/customers`);//bring array of customers that hav this specific name/${user_name_value}\r\n                let flag = await fetch(`https://localhost:3000/getcustomers`,{\r\n                    method:\"\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body:JSON.stringify({username:user_name_value,password:password_value})\r\n                });\r\n                // let flag = false;\r\n                // if(users)\r\n                // {\r\n                //     users.forEach((element, i) => {\r\n                //     if ((users[i].costemerID) === password_value) {\r\n                //         flag = true;\r\n                //         myuser=users[i];\r\n                //     }\r\n                //  });\r\n                // }\r\n                \r\n                if (!flag) {\r\n                    alert(\"the password or username do nnnnot exist\");\r\n\r\n                    // fetch(`https://localhost:3000/customers`,{\r\n                    //          method:'POST',\r\n                    //          headers: {\r\n                    //             'Accept': 'application/json',\r\n                    //             'Content-Type': 'application/json'\r\n                    //         },\r\n                    //         body:JSON.stringify({\r\n                    //             username:user_name_value,\r\n                    //             password:password_value\r\n                    //         })\r\n                    //         });\r\n                    //         navigate(`/Client/${myuser.costemerID}`);\r\n                    // alert(\"the password or username do not exist\");\r\n                } else {\r\n                    alert(\"the password or username  exist\");\r\n                //  fetch(`https://localhost:3000/customers?username=${user_name_value}`,{\r\n                //      method:'POST'});\r\n    \r\n                    // if (localStorage.getItem(\"user\")) {\r\n                        // navigate(\"/our_client\");\r\n                    // }\r\n                    // else {\r\n                    //     localStorage.setItem(\"user\", JSON.stringify(users));\r\n                    //     props.define_user(users);\r\n                    //     navigate(\"/user\");\r\n                    // }\r\n                }\r\n            }\r\n            \r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        savePasswordValue(\"\");\r\n        saveUsernameValue(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"hero-background\"></div>\r\n            <div id=\"main-wrapper\">\r\n                <div className=\"form-section\">\r\n                    <div className=\"contain-wrapper\">\r\n                        <div className=\"form\">\r\n                            <div className=\"form-header\">\r\n                            </div>\r\n                            <div className=\"form-contain\">\r\n                                <button onClick={()=>{ navigate(\"/\");}}>login</button>\r\n                                <input type=\"input\" className=\"form-control\" value={user_name_value} onChange={(e) => { saveUsernameValue(e.target.value) }} id={date} placeholder=\"username\"></input>\r\n                                <input type=\"password\" className=\"form-control\" value={password_value} onChange={(e) => { savePasswordValue(e.target.value) }} id={date} placeholder=\"password\"></input>\r\n                                <div className=\"btn\" onClick={checkIntegrity}>\r\n                                    sign in\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sign_In;"],"mappings":"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"},"metadata":{},"sourceType":"module"}