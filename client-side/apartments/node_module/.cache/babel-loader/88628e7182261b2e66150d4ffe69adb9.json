{"ast":null,"code":"var _jsxFileName = \"D:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Manager_Add_Category.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"./Nav\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Manager_Add_Category(props) {\n  _s();\n\n  const [category_name, setCategoryName] = useState(\"\");\n  const [category_code, setCategoryCode] = useState(\"\");\n\n  function saveCategoryName(product) {\n    setCategoryName(product);\n  }\n\n  async function save_new_category() {\n    debugger;\n\n    if (category_name == '') {\n      alert(\"Please fill in the input field!!\");\n    } else {\n      if (typeof category_name == \"string\" && isNaN(category_name)) {\n        let cat = await fetch(`http://localhost:3678/products/allcategories`, {\n          method: 'GET'\n        });\n        let categories = await cat.json();\n        let exsistname = false;\n        categories.forEach(cat => {\n          if (cat.CategoryName === category_name) {\n            exsistname = true;\n          }\n        });\n\n        if (exsistname) {\n          alert(\"name exsists\");\n          saveCategoryName('');\n        } else {\n          let ans = await fetch(\"http://localhost:3678/products/saveCategory\", {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              CategoryName: category_name\n            })\n          });\n          ans = await ans.json();\n          console.log(ans);\n          saveCategoryName('');\n        }\n      } else {\n        alert('There is a problem with the input field');\n        console.log(\"typeof category_name: \" + Number(category_name));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title2\",\n      children: \"add category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title3\",\n        children: \"put in a category name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"\",\n        value: category_name,\n        onChange: e => setCategoryName(e.target.value),\n        placeholder: \"category name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"but\",\n      onClick: save_new_category,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Manager_Add_Category, \"oxkBanNxyENy0hVjJy41CQxE6kU=\");\n\n_c = Manager_Add_Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manager_Add_Category\");","map":{"version":3,"names":["React","useState","useEffect","Nav","Manager_Add_Category","props","category_name","setCategoryName","category_code","setCategoryCode","saveCategoryName","product","save_new_category","alert","isNaN","cat","fetch","method","categories","json","exsistname","forEach","CategoryName","ans","headers","body","JSON","stringify","console","log","Number","e","target","value"],"sources":["D:/client-side/apartments/src/components/Manager_Add_Category.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"./Nav\"\r\nimport '../App.css';\r\n\r\nexport default function Manager_Add_Category(props) {\r\n    const [category_name, setCategoryName] = useState(\"\");\r\n    const [category_code, setCategoryCode] = useState(\"\");\r\n\r\n\r\n    function saveCategoryName(product) {\r\n        setCategoryName(product);\r\n    }\r\n    async function save_new_category() {\r\n        debugger;\r\n        if (category_name == '' ) {\r\n            alert(\"Please fill in the input field!!\");\r\n        }\r\n        else {\r\n            if (typeof category_name == \"string\" && isNaN(category_name) ) {\r\n                let cat = await fetch(`http://localhost:3678/products/allcategories`, {\r\n                    method: 'GET'\r\n                });\r\n                let categories = await cat.json();\r\n                let exsistname = false;\r\n                categories.forEach(cat => {\r\n                    if (cat.CategoryName === category_name) {\r\n                        exsistname = true;\r\n                    }\r\n                });\r\n                if (exsistname) {\r\n                    alert(\"name exsists\");\r\n                    saveCategoryName('');\r\n                }\r\n                else {\r\n                    let ans = await fetch(\"http://localhost:3678/products/saveCategory\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            CategoryName: category_name,\r\n                        })\r\n                    })\r\n                    ans = await ans.json();\r\n                    console.log(ans);\r\n                    saveCategoryName('');\r\n                }\r\n            }\r\n            else {\r\n                alert('There is a problem with the input field');\r\n                console.log(\"typeof category_name: \" + Number(category_name));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n        <Nav />\r\n        <br /><br /><br />\r\n       <p className=\"title2\">add category</p>\r\n       <form>\r\n            <p className=\"title3\">put in a category name</p>\r\n            <input type=\"input\" className=\"\" value={category_name} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"category name\"></input>\r\n        </form>\r\n        <br></br>\r\n        <button className=\"but\" onClick={save_new_category}>save</button>\r\n    </div>);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}