{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Client_Current_Product.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom'; // import React, { Component, useEffect, useState } from 'react';\n// import { useParams } from \"react-router-dom\";\n\nimport Our_Client from \"./Our_Client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Client_Current_Product(props) {\n  _s();\n\n  const [product, setProduct] = useState({});\n  let navigate = useNavigate();\n  let location = useLocation(); // const [category, setCategory] = useState(\"\");\n  // let { itemCode } = useParams();\n\n  let itemCode = location.state.CodeItem;\n  let items = location.state.products;\n  let myproduct = location.state.myproduct;\n  useEffect(() => {\n    let item = items.filter(i => i.CodeItem == itemCode);\n    setProduct(item[0]);\n  }, []);\n  let user = sessionStorage.getItem(\"currentuser\"); // let currentUser = JASON.parse(user.password);\n\n  let currentUser = JSON.parse(user);\n\n  async function addToCart() {\n    if (!currentUser || currentUser.length === 0) {\n      alert(\"You cannot log in because you are not registered. Please go to sign in\");\n      navigate('/');\n    } else {\n      let helparrray = [];\n\n      if (currentUser.cart.length > 0) {\n        //             let aaa=[];\n        // animals.map((it,i)=>{\n        // if(it=='pigs'){\n        // aaa.push('cows');\n        // }else{\n        // aaa.push(it);\n        // }\n        // })\n        // \n        //     let today=new Date();\n        //     let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        // let res=   await fetch(`http://localhost:3678/orders/add`, {\n        //         method: 'POST',\n        //         headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body:JSON.stringify({customerid:currentUser.password,orderprice:0,date: date,status:0})\n        //     });\n        //     res=await res.json();\n        let istrue = false;\n        currentUser.cart.map(item => {\n          if (itemCode === item.CodeItem) {\n            istrue = true;\n            console.log(item.QuantityItem + 1); // ,OrderID: itemorderid\n\n            helparrray.push({\n              CodeCategory: item.CodeCategory,\n              CodeItem: item.CodeItem,\n              ItemName: item.ItemName,\n              Price: item.Price,\n              QuantityItem: item.QuantityItem + 1,\n              description: item.description,\n              path: item.path\n            });\n          } else {\n            helparrray.push({\n              CodeCategory: item.CodeCategory,\n              CodeItem: item.CodeItem,\n              ItemName: item.ItemName,\n              Price: item.Price,\n              QuantityItem: item.QuantityItem,\n              description: item.description,\n              path: item.path\n            });\n          }\n        }); // sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: password_value, user_name: user_name_value ,cart:[]}));\n\n        console.log(helparrray);\n\n        if (istrue) {\n          sessionStorage.setItem('currentuser', JSON.stringify({\n            password: currentUser.password,\n            user_name: currentUser.user_name,\n            cart: helparrray,\n            OrderID: currentUser.OrderID\n          }));\n        } else {\n          helparrray.push({\n            CodeCategory: myproduct.CodeCategory,\n            CodeItem: myproduct.CodeItem,\n            ItemName: myproduct.ItemName,\n            Price: myproduct.Price,\n            QuantityItem: 1,\n            description: myproduct.description,\n            path: myproduct.path\n          });\n          sessionStorage.setItem('currentuser', JSON.stringify({\n            password: currentUser.password,\n            user_name: currentUser.user_name,\n            cart: helparrray,\n            OrderID: currentUser.OrderID\n          }));\n        }\n\n        alert(\"Successfully added to your cart!!\");\n      } else {\n        helparrray.push({\n          CodeCategory: myproduct.CodeCategory,\n          CodeItem: myproduct.CodeItem,\n          ItemName: myproduct.ItemName,\n          Price: myproduct.Price,\n          QuantityItem: 1,\n          description: myproduct.description,\n          path: myproduct.path\n        });\n        sessionStorage.setItem('currentuser', JSON.stringify({\n          password: currentUser.password,\n          user_name: currentUser.user_name,\n          cart: helparrray,\n          OrderID: currentUser.OrderID\n        }));\n        alert(\"Successfully added to your cart!!\");\n      }\n\n      navigate(\"/client\");\n      console.log(\"addtocart\"); // let itemIC = await fetch(`http://localhost:3678/addToCart`, {\n      //     method: 'POST',\n      //     headers: {\n      //         'Accept': 'application/json',\n      //         'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //         CodeItem: product.CodeItem,\n      //         orderid: currentUser.password\n      //     })\n      // });\n    }\n  } // async function forShoppingCart() {\n  //     navigate(\"/client/shopingCart\");\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.ItemName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.Price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => addToCart(),\n      children: \"add to shopping cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 75\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Client_Current_Product, \"Tu49Dxn3If0Y02CZYZETVdmFOPc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Client_Current_Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client_Current_Product\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","Our_Client","Client_Current_Product","props","product","setProduct","navigate","location","itemCode","state","CodeItem","items","products","myproduct","item","filter","i","user","sessionStorage","getItem","currentUser","JSON","parse","addToCart","length","alert","helparrray","cart","istrue","map","console","log","QuantityItem","push","CodeCategory","ItemName","Price","description","path","setItem","stringify","password","user_name","OrderID","e"],"sources":["F:/client-side/apartments/src/components/Client_Current_Product.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n// import React, { Component, useEffect, useState } from 'react';\r\n// import { useParams } from \"react-router-dom\";\r\nimport Our_Client from \"./Our_Client\";\r\nexport default function Client_Current_Product(props) {\r\n    const [product, setProduct] = useState({});\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    // const [category, setCategory] = useState(\"\");\r\n    // let { itemCode } = useParams();\r\n    let itemCode = location.state.CodeItem;\r\n    let items = location.state.products;\r\n    let myproduct = location.state.myproduct;\r\n    useEffect(() => {\r\n        let item = items.filter(i => i.CodeItem == itemCode);\r\n        setProduct(item[0]);\r\n    }, []);\r\n\r\n    let user = sessionStorage.getItem(\"currentuser\");\r\n    // let currentUser = JASON.parse(user.password);\r\n    let currentUser = JSON.parse(user);\r\n\r\n\r\n\r\n\r\n    async function addToCart() {\r\n        if (!currentUser || currentUser.length === 0) {\r\n            alert(\"You cannot log in because you are not registered. Please go to sign in\");\r\n        navigate('/');\r\n        } else {\r\n            let helparrray = [];\r\n            if (currentUser.cart.length > 0) {\r\n                //             let aaa=[];\r\n                // animals.map((it,i)=>{\r\n                // if(it=='pigs'){\r\n                // aaa.push('cows');\r\n                // }else{\r\n                // aaa.push(it);\r\n                // }\r\n                // })\r\n                // \r\n                //     let today=new Date();\r\n                //     let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n                // let res=   await fetch(`http://localhost:3678/orders/add`, {\r\n                //         method: 'POST',\r\n                //         headers: {\r\n                //             'Accept': 'application/json',\r\n                //             'Content-Type': 'application/json'\r\n                //         },\r\n                //         body:JSON.stringify({customerid:currentUser.password,orderprice:0,date: date,status:0})\r\n                //     });\r\n                //     res=await res.json();\r\n                let istrue = false;\r\n                currentUser.cart.map((item) => {\r\n                    if (itemCode === item.CodeItem) {\r\n                        istrue = true;\r\n                        console.log((item.QuantityItem + 1));\r\n                        // ,OrderID: itemorderid\r\n                        helparrray.push({ CodeCategory: item.CodeCategory, CodeItem: item.CodeItem, ItemName: item.ItemName, Price: item.Price, QuantityItem: (item.QuantityItem + 1), description: item.description, path: item.path });\r\n                    }\r\n                    else {\r\n                        helparrray.push({ CodeCategory: item.CodeCategory, CodeItem: item.CodeItem, ItemName: item.ItemName, Price: item.Price, QuantityItem: (item.QuantityItem), description: item.description, path: item.path });\r\n                    }\r\n                })\r\n                // sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: password_value, user_name: user_name_value ,cart:[]}));\r\n                console.log(helparrray);\r\n                if (istrue) {\r\n                    sessionStorage.setItem('currentuser', JSON.stringify({ password: currentUser.password, user_name: currentUser.user_name, cart: helparrray, OrderID: currentUser.OrderID }));\r\n                } else {\r\n                    helparrray.push({\r\n                        CodeCategory: myproduct.CodeCategory,\r\n                        CodeItem: myproduct.CodeItem,\r\n                        ItemName: myproduct.ItemName,\r\n                        Price: myproduct.Price,\r\n                        QuantityItem: 1,\r\n                        description: myproduct.description,\r\n                        path: myproduct.path\r\n                    });\r\n                    sessionStorage.setItem('currentuser', JSON.stringify({ password: currentUser.password, user_name: currentUser.user_name, cart: helparrray, OrderID: currentUser.OrderID }));\r\n                }\r\n                alert(\"Successfully added to your cart!!\");\r\n            } else {\r\n                helparrray.push({\r\n                    CodeCategory: myproduct.CodeCategory,\r\n                    CodeItem: myproduct.CodeItem,\r\n                    ItemName: myproduct.ItemName,\r\n                    Price: myproduct.Price,\r\n                    QuantityItem: 1,\r\n                    description: myproduct.description,\r\n                    path: myproduct.path\r\n                });\r\n                sessionStorage.setItem('currentuser', JSON.stringify({ password: currentUser.password, user_name: currentUser.user_name, cart: helparrray, OrderID: currentUser.OrderID }));\r\n                alert(\"Successfully added to your cart!!\");\r\n            }\r\n            navigate(\"/client\");\r\n            console.log(\"addtocart\");\r\n            // let itemIC = await fetch(`http://localhost:3678/addToCart`, {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Accept': 'application/json',\r\n            //         'Content-Type': 'application/json'\r\n            //     },\r\n            //     body: JSON.stringify({\r\n            //         CodeItem: product.CodeItem,\r\n            //         orderid: currentUser.password\r\n            //     })\r\n            // });\r\n        }\r\n    }\r\n\r\n    // async function forShoppingCart() {\r\n    //     navigate(\"/client/shopingCart\");\r\n    // }\r\n\r\n\r\n    return (<div>\r\n        {/* <img src=\"{product[0].path}\" alt=\"item\" /> */}\r\n        <p>{product.ItemName}</p>\r\n        <p>{product.description}</p>\r\n        <p>price:</p><p>{product.Price}</p>\r\n        <button onClick={(e) => addToCart()}>add to shopping cart</button><br />\r\n        {/* <button onClick={forShoppingCart}>to shopping cart</button> */}\r\n    </div>);\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}