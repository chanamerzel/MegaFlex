{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Log_In.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet date = new Date();\n\nfunction Log_In(props) {\n  _s();\n\n  const [password_value, setPassword_value] = useState(\"\");\n  const [user_name_value, setUser_name_value] = useState(\"\");\n  let navigate = useNavigate();\n\n  function savePasswordValue(val) {\n    setPassword_value(val);\n  }\n\n  function saveUsernameValue(val) {\n    setUser_name_value(val);\n  }\n\n  async function getfetch(url) {\n    try {\n      let res = await fetch(url);\n      return await res.json();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkIntegrity() {\n    try {\n      if (password_value === '' || user_name_value === \"\") {\n        alert(\"password or username are empty\");\n      } else {\n        let users = await getfetch(`https://localhost:3000/customers?username=${user_name_value}`); //bring array of customers that hav this specific name\n\n        let flag = false;\n        users.forEach((element, i) => {\n          if (users[i].costemerID === password_value) {\n            flag = true;\n          }\n        });\n\n        if (!flag) {\n          alert(\"the password or username do not exist\");\n        } else {\n          //  fetch(`https://localhost:3000/customers?username=${user_name_value}`,{\n          //      method:'POST'});\n          // if (localStorage.getItem(\"user\")) {\n          navigate(\"/our_client\"); // }\n          // else {\n          //     localStorage.setItem(\"user\", JSON.stringify(users));\n          //     props.define_user(users);\n          //     navigate(\"/user\");\n          // }\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    savePasswordValue(\"\");\n    saveUsernameValue(\"\");\n  }\n\n  const func = async;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"login client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Log_In, \"5yXZq2T0eec3dOMhP9TSgmQxWn0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Log_In;\nexport default Log_In;\n\nvar _c;\n\n$RefreshReg$(_c, \"Log_In\");","map":{"version":3,"names":["useState","useNavigate","date","Date","Log_In","props","password_value","setPassword_value","user_name_value","setUser_name_value","navigate","savePasswordValue","val","saveUsernameValue","getfetch","url","res","fetch","json","error","console","log","checkIntegrity","alert","users","flag","forEach","element","i","costemerID","func","async"],"sources":["F:/client-side/apartments/src/components/Log_In.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nlet date = new Date();\r\nfunction Log_In(props) {\r\n    const [password_value, setPassword_value] = useState(\"\");\r\n    const [user_name_value, setUser_name_value] = useState(\"\");\r\n    let navigate = useNavigate();\r\n\r\n    function savePasswordValue(val) {\r\n        setPassword_value(val);\r\n    }\r\n\r\n    function saveUsernameValue(val) {\r\n        setUser_name_value(val);\r\n    }\r\n\r\n    async function getfetch(url) {\r\n        try {\r\n            let res = await fetch(url);\r\n            return await res.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function checkIntegrity() {\r\n        try {\r\n            if(password_value===''||user_name_value===\"\"){\r\n                alert(\"password or username are empty\");\r\n            }else{\r\n            let users = await getfetch(`https://localhost:3000/customers?username=${user_name_value}`);//bring array of customers that hav this specific name\r\n            let flag = false;\r\n            users.forEach((element, i) => {\r\n                if ((users[i].costemerID) === password_value) {\r\n                    flag = true;\r\n                }\r\n            });\r\n            if (!flag) {\r\n                alert(\"the password or username do not exist\");\r\n            } else {\r\n            //  fetch(`https://localhost:3000/customers?username=${user_name_value}`,{\r\n            //      method:'POST'});\r\n\r\n                // if (localStorage.getItem(\"user\")) {\r\n                    navigate(\"/our_client\");\r\n                // }\r\n                // else {\r\n                //     localStorage.setItem(\"user\", JSON.stringify(users));\r\n                //     props.define_user(users);\r\n                //     navigate(\"/user\");\r\n                // }\r\n            }\r\n        }\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        savePasswordValue(\"\");\r\n        saveUsernameValue(\"\");\r\n    }\r\n\r\n    const func=async\r\n    return (\r\n        <div>\r\n            <h1>login client</h1>\r\n            {/* <div id=\"hero-background\"></div>\r\n            <div id=\"main-wrapper\">\r\n                <div className=\"form-section\">\r\n                    <div className=\"contain-wrapper\">\r\n                        <div className=\"form\">\r\n                            <div className=\"form-header\">\r\n                            </div>\r\n                            <div className=\"form-contain\">\r\n                            <button onClick={()=>{ navigate(\"/signin\");}}>sign in</button>\r\n                                <input type=\"input\" className=\"form-control\" value={user_name_value} onChange={(e) => { saveUsernameValue(e.target.value) }} id={date} placeholder=\"username\"></input>\r\n                                <input type=\"password\" className=\"form-control\" value={password_value} onChange={(e) => { savePasswordValue(e.target.value) }} id={date} placeholder=\"password\"></input>\r\n                                <div className=\"btn\" onClick={checkIntegrity}>\r\n                                    login\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\nexport default Log_In;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACnB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;EACA,IAAIU,QAAQ,GAAGT,WAAW,EAA1B;;EAEA,SAASU,iBAAT,CAA2BC,GAA3B,EAAgC;IAC5BL,iBAAiB,CAACK,GAAD,CAAjB;EACH;;EAED,SAASC,iBAAT,CAA2BD,GAA3B,EAAgC;IAC5BH,kBAAkB,CAACG,GAAD,CAAlB;EACH;;EAED,eAAeE,QAAf,CAAwBC,GAAxB,EAA6B;IACzB,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;MACA,OAAO,MAAMC,GAAG,CAACE,IAAJ,EAAb;IACH,CAHD,CAGE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ;;EAED,eAAeG,cAAf,GAAgC;IAC5B,IAAI;MACA,IAAGhB,cAAc,KAAG,EAAjB,IAAqBE,eAAe,KAAG,EAA1C,EAA6C;QACzCe,KAAK,CAAC,gCAAD,CAAL;MACH,CAFD,MAEK;QACL,IAAIC,KAAK,GAAG,MAAMV,QAAQ,CAAE,6CAA4CN,eAAgB,EAA9D,CAA1B,CADK,CACsF;;QAC3F,IAAIiB,IAAI,GAAG,KAAX;QACAD,KAAK,CAACE,OAAN,CAAc,CAACC,OAAD,EAAUC,CAAV,KAAgB;UAC1B,IAAKJ,KAAK,CAACI,CAAD,CAAL,CAASC,UAAV,KAA0BvB,cAA9B,EAA8C;YAC1CmB,IAAI,GAAG,IAAP;UACH;QACJ,CAJD;;QAKA,IAAI,CAACA,IAAL,EAAW;UACPF,KAAK,CAAC,uCAAD,CAAL;QACH,CAFD,MAEO;UACP;UACA;UAEI;UACIb,QAAQ,CAAC,aAAD,CAAR,CALD,CAMH;UACA;UACA;UACA;UACA;UACA;QACH;MACJ;IACA,CA3BD,CA2BE,OAAOS,KAAP,EAAc;MACZI,KAAK,CAACJ,KAAD,CAAL;IACH;;IACDR,iBAAiB,CAAC,EAAD,CAAjB;IACAE,iBAAiB,CAAC,EAAD,CAAjB;EACH;;EAED,MAAMiB,IAAI,GAACC,KAAX;EACA,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;;GAlFQ3B,M;UAGUH,W;;;KAHVG,M;AAmFT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}