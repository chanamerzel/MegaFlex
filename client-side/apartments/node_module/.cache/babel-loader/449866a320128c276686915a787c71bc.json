{"ast":null,"code":"var _jsxFileName = \"F:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Client_Shoping_Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\nimport Client_Current_Product from \"./Client_Current_Product\";\nimport Client_Product_In_Cart from \"./Client_Product_In_Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Client_Shoping_Cart(props) {\n  _s();\n\n  const [products, setProducts] = useState([{}]);\n  const [client, setClient] = useState(\"\");\n  const [quantity, setQuantity] = useState([]);\n  const [orderid, setOrderid] = useState([]);\n  let navigate = useNavigate(); // let location = useLocation();\n\n  let Allitems = location.state.products;\n  console.log(Allitems);\n  useEffect(() => {\n    async function getProducts() {\n      // let prod = await fetch(\"http://localhost:3678/shopingCart\", {\n      //     method: 'GET'\n      // });\n      let session = JSON.parse(sessionStorage.getItem(\"currentuser\")).password;\n      let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: session\n        }) // body:JSON.stringify({\"password\":\"333\"}) \n\n      });\n      let pro = await prod.json();\n      setProducts(pro);\n      let quan = pro.map(p => p.Quantity);\n      setQuantity(quan);\n      let order_id = pro.map(p => p.OrderID);\n      setOrderid(order_id);\n    } // async function getProducts() {\n    //     debugger;\n    //     let i = await fetch(\"http://localhost:3678/shopingCart\", {\n    //         method: 'GET'\n    //     });\n    //     let items = await i.json();\n    //     // items.map((item) =>\n    //     //     quantity = quantity + item.Quantity\n    //     // )\n    //     // let itemInC = await fetch(`http://localhost:3678/shopingCartItem/${items[0].CodeItem}`, {\n    //     //     method: 'GET'\n    //     // });\n    //     items.forEach(item => {\n    //         getPro(item.CodeItem)\n    //     })\n    //     // let allI=items.map((item)=>await fetch(`http://localhost:3678/shopingCartItem/${item.CodeItem}`, {\n    //     //     method: 'GET'\n    //     // }))\n    //     // setProducts(itemInCart);\n    //     items.map((item) =>\n    //         // quantity = quantity + item.Quantity\n    //         setQuantity(item.Quantity)\n    //     )\n    // }\n    // async function getPro(code) {\n    //     let itemInC = await fetch(`http://localhost:3678/shopingCartItem/${code}`, {\n    //         method: 'GET'\n    //     });\n    //     let item = await itemInC.json();\n    //     //להכניס מוצר לסטייט\n    //     // setProducts(products+item);\n    //     setProducts([...products, item]);\n    //     console.log(products);\n    // }\n    // setProducts(itemInCart);\n    // items.map((item) =>\n    //     // quantity = quantity + item.Quantity\n    //     setQuantity(item.Quantity)\n    // )\n\n\n    getProducts();\n  }, []); // let cart = JSON.parse(sessionStorage.getItem(\"currentuser\")).cart;\n  // let cartQ = cart.map(p => p.Quantity);\n\n  async function forPaying() {\n    navigate(\"/client/finalBill\", {\n      state: {\n        products: products,\n        quantity: quantity,\n        orderid: orderid\n      }\n    });\n  } // async function forPaying() {\n  //     navigate(\"/client/finalBill\", { state: { products: products, quantity: cartQ } });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"shoping cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), products.map((myproduct, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Client_Product_In_Cart, {\n        product: myproduct,\n        Allitems: Allitems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 10\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: forPaying,\n      children: \"to pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Client_Shoping_Cart, \"KstHEMG+mpXsA9Kk+v/hN5Obw9A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Client_Shoping_Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client_Shoping_Cart\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","Routes","Route","Link","Outlet","Client_Current_Product","Client_Product_In_Cart","Client_Shoping_Cart","props","products","setProducts","client","setClient","quantity","setQuantity","orderid","setOrderid","navigate","Allitems","location","state","console","log","getProducts","session","JSON","parse","sessionStorage","getItem","password","prod","fetch","method","mode","headers","body","stringify","pro","json","quan","map","p","Quantity","order_id","OrderID","forPaying","myproduct","index"],"sources":["F:/client-side/apartments/src/components/Client_Shoping_Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\r\nimport Client_Current_Product from \"./Client_Current_Product\";\r\nimport Client_Product_In_Cart from \"./Client_Product_In_Cart\";\r\nexport default function Client_Shoping_Cart(props) {\r\n    const [products, setProducts] = useState([{}]);\r\n    const [client, setClient] = useState(\"\");\r\n    const [quantity, setQuantity] = useState([]);\r\n    const [orderid, setOrderid] = useState([]);\r\n    let navigate = useNavigate();\r\n    // let location = useLocation();\r\n    let Allitems = location.state.products;\r\nconsole.log(Allitems);\r\n    useEffect(() => {\r\n\r\n        async function getProducts() {\r\n            // let prod = await fetch(\"http://localhost:3678/shopingCart\", {\r\n            //     method: 'GET'\r\n            // });\r\n            let session=JSON.parse(sessionStorage.getItem(\"currentuser\")).password;\r\n            let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\r\n                method: 'POST',\r\n                 mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body:JSON.stringify({password:session})\r\n                \r\n                // body:JSON.stringify({\"password\":\"333\"}) \r\n            });\r\n            let pro = await prod.json();\r\n            setProducts(pro);\r\n            let quan = pro.map(p => p.Quantity);\r\n            setQuantity(quan);\r\n            let order_id=pro.map(p => p.OrderID);\r\n            setOrderid(order_id)\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // async function getProducts() {\r\n        //     debugger;\r\n        //     let i = await fetch(\"http://localhost:3678/shopingCart\", {\r\n        //         method: 'GET'\r\n        //     });\r\n        //     let items = await i.json();\r\n        //     // items.map((item) =>\r\n        //     //     quantity = quantity + item.Quantity\r\n        //     // )\r\n\r\n        //     // let itemInC = await fetch(`http://localhost:3678/shopingCartItem/${items[0].CodeItem}`, {\r\n        //     //     method: 'GET'\r\n        //     // });\r\n\r\n        //     items.forEach(item => {\r\n        //         getPro(item.CodeItem)\r\n        //     })\r\n\r\n        //     // let allI=items.map((item)=>await fetch(`http://localhost:3678/shopingCartItem/${item.CodeItem}`, {\r\n        //     //     method: 'GET'\r\n        //     // }))\r\n\r\n        //     // setProducts(itemInCart);\r\n        //     items.map((item) =>\r\n        //         // quantity = quantity + item.Quantity\r\n        //         setQuantity(item.Quantity)\r\n        //     )\r\n\r\n        // }\r\n        // async function getPro(code) {\r\n        //     let itemInC = await fetch(`http://localhost:3678/shopingCartItem/${code}`, {\r\n        //         method: 'GET'\r\n        //     });\r\n        //     let item = await itemInC.json();\r\n        //     //להכניס מוצר לסטייט\r\n        //     // setProducts(products+item);\r\n        //     setProducts([...products, item]);\r\n\r\n        //     console.log(products);\r\n        // }\r\n\r\n\r\n        // setProducts(itemInCart);\r\n        // items.map((item) =>\r\n        //     // quantity = quantity + item.Quantity\r\n        //     setQuantity(item.Quantity)\r\n        // )\r\n\r\n\r\n        getProducts();\r\n    }, []);\r\n\r\n    // let cart = JSON.parse(sessionStorage.getItem(\"currentuser\")).cart;\r\n    // let cartQ = cart.map(p => p.Quantity);\r\n\r\n    async function forPaying() {\r\n        navigate(\"/client/finalBill\", { state: { products: products, quantity: quantity,orderid:orderid } });\r\n    }\r\n    // async function forPaying() {\r\n    //     navigate(\"/client/finalBill\", { state: { products: products, quantity: cartQ } });\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n        <p>shoping cart</p>\r\n        {products.map((myproduct, index) =>\r\n        (<div key={index}>\r\n           <Client_Product_In_Cart product={myproduct} Allitems={Allitems}/>\r\n        </div>)\r\n        )} \r\n        \r\n        <button onClick={forPaying}>to pay</button>\r\n    </div>);\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}