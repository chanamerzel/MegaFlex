{"ast":null,"code":"var _jsxFileName = \"E:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Manager_Add_Category.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"./Nav\";\nimport '../App.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Manager_Add_Category(props) {\n  _s();\n\n  const [category_name, setCategoryName] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n\n  async function getAllCategories() {\n    let cat = await fetch(`http://localhost:3678/products/allcategories`, {\n      method: 'GET'\n    });\n    let categories = await cat.json();\n    setCategories(categories);\n  }\n\n  useEffect(() => {\n    getAllCategories();\n  }, []);\n\n  function saveCategoryName(product) {\n    setCategoryName(product);\n  }\n\n  async function save_new_category() {\n    debugger;\n\n    if (category_name == '') {\n      alert(\"Please fill in the input field!!\");\n    } else {\n      if (typeof category_name == \"string\" && isNaN(category_name)) {\n        let exsistname = false;\n        categories.forEach(cat => {\n          if (cat.CategoryName === category_name) {\n            exsistname = true;\n          }\n        });\n\n        if (exsistname) {\n          alert(\"name exsists\");\n          saveCategoryName('');\n        } else {\n          let ans = await fetch(\"http://localhost:3678/products/saveCategory\", {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              CategoryName: category_name\n            })\n          });\n          ans = await ans.json();\n          console.log(ans);\n          saveCategoryName('');\n          getAllCategories();\n        }\n      } else {\n        alert('There is a problem with the input field');\n        console.log(\"typeof category_name: \" + Number(category_name));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title2\",\n      children: \"add category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title3\",\n        children: \"put in a category name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"\",\n        value: category_name,\n        onChange: e => setCategoryName(e.target.value),\n        placeholder: \"category name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"but\",\n      onClick: save_new_category,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), categories.map(catagory => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title3\",\n        children: catagory.CategoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, catagory.CategoryName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Manager_Add_Category, \"T1wTv4XBAiLEkfG3UYSyRmYytVg=\");\n\n_c = Manager_Add_Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manager_Add_Category\");","map":{"version":3,"names":["React","useState","useEffect","Nav","useLocation","Manager_Add_Category","props","category_name","setCategoryName","categories","setCategories","getAllCategories","cat","fetch","method","json","saveCategoryName","product","save_new_category","alert","isNaN","exsistname","forEach","CategoryName","ans","headers","body","JSON","stringify","console","log","Number","e","target","value","map","catagory"],"sources":["E:/client-side/apartments/src/components/Manager_Add_Category.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"./Nav\"\r\nimport '../App.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Manager_Add_Category(props) {\r\n    const [category_name, setCategoryName] = useState(\"\");\r\n    const [categories, setCategories] = useState([]);\r\n    async function getAllCategories() {\r\n        let cat = await fetch(`http://localhost:3678/products/allcategories`, {\r\n            method: 'GET'\r\n        });\r\n        let categories = await cat.json();\r\n        setCategories(categories)\r\n    }\r\n    useEffect(() => {\r\n        getAllCategories();\r\n    }, []);\r\n    function saveCategoryName(product) {\r\n        setCategoryName(product);\r\n    }\r\n    async function save_new_category() {\r\n        debugger;\r\n        if (category_name == '') {\r\n            alert(\"Please fill in the input field!!\");\r\n        }\r\n        else {\r\n            if (typeof category_name == \"string\" && isNaN(category_name)) {\r\n\r\n                let exsistname = false;\r\n                categories.forEach(cat => {\r\n                    if (cat.CategoryName === category_name) {\r\n                        exsistname = true;\r\n                    }\r\n                });\r\n                if (exsistname) {\r\n                    alert(\"name exsists\");\r\n                    saveCategoryName('');\r\n                }\r\n                else {\r\n                    let ans = await fetch(\"http://localhost:3678/products/saveCategory\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            CategoryName: category_name,\r\n                        })\r\n                    })\r\n                    ans = await ans.json();\r\n                    console.log(ans);\r\n                    saveCategoryName('');\r\n                    getAllCategories()\r\n                }\r\n            }\r\n            else {\r\n                alert('There is a problem with the input field');\r\n                console.log(\"typeof category_name: \" + Number(category_name));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n        <Nav />\r\n        <br /><br /><br />\r\n        <p className=\"title2\">add category</p>\r\n        <form>\r\n            <p className=\"title3\">put in a category name</p>\r\n            <input type=\"input\" className=\"\" value={category_name} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"category name\"></input>\r\n        </form>\r\n        <br></br>\r\n        <button className=\"but\" onClick={save_new_category}>save</button>\r\n        {categories.map((catagory) =>\r\n        (<div className=\"box\" key={catagory.CategoryName}>\r\n            <p className='title3'>{catagory.CategoryName}</p>\r\n        </div>)\r\n        )}\r\n    </div>);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}