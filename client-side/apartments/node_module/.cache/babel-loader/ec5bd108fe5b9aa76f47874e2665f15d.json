{"ast":null,"code":"var _jsxFileName = \"D:\\\\client-side\\\\apartments\\\\src\\\\components\\\\Sign_In.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css';\nimport Nav from \"./Nav\";\nimport My_Manager from \"./My_Manager\";\nimport Manager_Add_Product from \"./Manager_Add_Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet date = new Date();\n\nfunction Sign_In(props) {\n  _s();\n\n  const [password_value, setPassword_value] = useState(\"\");\n  const [user_name_value, setUser_name_value] = useState(\"\"); // const [current, setcurrent] = useState({password:\"\",name:\"\"});\n\n  let navigate = useNavigate();\n\n  function savePasswordValue(val) {\n    setPassword_value(val);\n  }\n\n  function saveUsernameValue(val) {\n    setUser_name_value(val);\n  } // async function getfetch(url) {\n  //     try {\n  //         let res = await fetch(url);\n  //         return await res.json();\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n\n  async function checkIntegrity() {\n    let myuser;\n\n    try {\n      if (password_value === '' || user_name_value === \"\") {\n        alert(\"password or username are empty\");\n      } else {\n        debugger; // let users = await getfetch(`https://localhost:3000/customers`);//bring array of customers that hav this specific name/${user_name_value}\n\n        let flag = await fetch(`http://localhost:3000/getcustomers`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: user_name_value,\n            password: password_value\n          })\n        });\n        flag = await flag.json(); // let flag = false;\n        // if(users)\n        // {\n        //     users.forEach((element, i) => {\n        //     if ((users[i].costemerID) === password_value) {\n        //         flag = true;\n        //         myuser=users[i];\n        //     }\n        //  });\n        // }\n\n        if (!flag) {\n          // alert(\"the password or username do nnnnot exist\");\n          fetch(`http://localhost:3000/customers`, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: user_name_value,\n              password: password_value\n            })\n          });\n          navigate(`/manager`);\n          sessionStorage.setItem(\"currentuser\", JSON.stringify({\n            password: password_value,\n            user_name: user_name_value\n          })); //    cur=   sessionStorage.getItem(\"currentuser\");\n          //     setcurrent(cur);\n          //     console.log(cur);\n          //     console.log(JSON.parse(cur));\n          // console.log(JSON.parse(current));\n          // navigate(`/Client/${password_value}`);\n          // alert(\"the password or username do not exist\");\n        } else {\n          alert(\"the password or username  exist\"); //  fetch(`http://localhost:3000/customers?username=${user_name_value}`,{\n          //      method:'POST'});\n          // if (localStorage.getItem(\"user\")) {\n          // navigate(\"/our_client\");\n          // }\n          // else {\n          //     localStorage.setItem(\"user\", JSON.stringify(users));\n          //     props.define_user(users);\n          //     navigate(\"/user\");\n          // }\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    savePasswordValue(\"\");\n    saveUsernameValue(\"\");\n  }\n\n  let cur = sessionStorage.getItem(\"currentuser\"); // if (cur) {\n  // function manage(){\n  //     navigate(`/manager`);\n  // }\n\n  useEffect(() => {\n    function manage() {\n      navigate(`/manager`);\n    }\n\n    if (cur) {\n      alert();\n      manage();\n    }\n  }, []); // }else{\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hero-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contain-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(\"/\");\n                },\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"input\",\n                className: \"form-control\",\n                value: user_name_value,\n                onChange: e => {\n                  saveUsernameValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                value: password_value,\n                onChange: e => {\n                  savePasswordValue(e.target.value);\n                },\n                id: date,\n                placeholder: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                onClick: checkIntegrity,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \" sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 13\n  }, this); // }\n}\n\n_s(Sign_In, \"wVIskojxGU540Hl9QoR8YK6oOJk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Sign_In;\nexport default Sign_In;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign_In\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Nav","My_Manager","Manager_Add_Product","date","Date","Sign_In","props","password_value","setPassword_value","user_name_value","setUser_name_value","navigate","savePasswordValue","val","saveUsernameValue","checkIntegrity","myuser","alert","flag","fetch","method","headers","body","JSON","stringify","username","password","json","sessionStorage","setItem","user_name","error","cur","getItem","manage","e","target","value"],"sources":["D:/client-side/apartments/src/components/Sign_In.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Nav from \"./Nav\";\r\nimport My_Manager from \"./My_Manager\"\r\nimport Manager_Add_Product from \"./Manager_Add_Product\";\r\n\r\nlet date = new Date();\r\nfunction Sign_In(props) {\r\n    const [password_value, setPassword_value] = useState(\"\");\r\n    const [user_name_value, setUser_name_value] = useState(\"\");\r\n    // const [current, setcurrent] = useState({password:\"\",name:\"\"});\r\n\r\n    let navigate = useNavigate();\r\n   \r\n    function savePasswordValue(val) {\r\n        setPassword_value(val);\r\n    }\r\n\r\n    function saveUsernameValue(val) {\r\n        setUser_name_value(val);\r\n    }\r\n\r\n    // async function getfetch(url) {\r\n    //     try {\r\n    //         let res = await fetch(url);\r\n    //         return await res.json();\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    async function checkIntegrity() {\r\n        let myuser;\r\n        try {\r\n            if (password_value === '' || user_name_value === \"\") {\r\n                alert(\"password or username are empty\");\r\n            } else {\r\n                debugger\r\n                // let users = await getfetch(`https://localhost:3000/customers`);//bring array of customers that hav this specific name/${user_name_value}\r\n                let flag = await fetch(`http://localhost:3000/getcustomers`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ username: user_name_value, password: password_value })\r\n                });\r\n                flag = await flag.json();\r\n                // let flag = false;\r\n                // if(users)\r\n                // {\r\n                //     users.forEach((element, i) => {\r\n                //     if ((users[i].costemerID) === password_value) {\r\n                //         flag = true;\r\n                //         myuser=users[i];\r\n                //     }\r\n                //  });\r\n                // }\r\n\r\n                if (!flag) {\r\n                    // alert(\"the password or username do nnnnot exist\");\r\n\r\n                    fetch(`http://localhost:3000/customers`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: user_name_value,\r\n                            password: password_value\r\n                        })\r\n                    });\r\n                    navigate(`/manager`);\r\n                    sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: password_value, user_name: user_name_value }));\r\n                //    cur=   sessionStorage.getItem(\"currentuser\");\r\n                //     setcurrent(cur);\r\n                //     console.log(cur);\r\n                //     console.log(JSON.parse(cur));\r\n\r\n                    // console.log(JSON.parse(current));\r\n                    // navigate(`/Client/${password_value}`);\r\n                    // alert(\"the password or username do not exist\");\r\n                } else {\r\n                    alert(\"the password or username  exist\");\r\n                    //  fetch(`http://localhost:3000/customers?username=${user_name_value}`,{\r\n                    //      method:'POST'});\r\n\r\n                    // if (localStorage.getItem(\"user\")) {\r\n                    // navigate(\"/our_client\");\r\n                    // }\r\n                    // else {\r\n                    //     localStorage.setItem(\"user\", JSON.stringify(users));\r\n                    //     props.define_user(users);\r\n                    //     navigate(\"/user\");\r\n                    // }\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        savePasswordValue(\"\");\r\n        saveUsernameValue(\"\");\r\n    }\r\n    let cur=sessionStorage.getItem(\"currentuser\");\r\n    // if (cur) {\r\n// function manage(){\r\n//     navigate(`/manager`);\r\n// }\r\nuseEffect(() => {\r\n    function manage(){\r\n        navigate(`/manager`);\r\n    }\r\n    if (cur) {\r\nalert()\r\n    manage();\r\n    }\r\n}, []);\r\n        \r\n    // }else{\r\n        return (\r\n            <div>\r\n                <div id=\"hero-background\"></div>\r\n                <div id=\"main-wrapper\">\r\n                    <div className=\"form-section\">\r\n                        <div className=\"contain-wrapper\">\r\n                            <div className=\"form\">\r\n                                <div className=\"form-header\">\r\n                                </div>\r\n                                <div className=\"form-contain\">\r\n                                    <button onClick={() => { navigate(\"/\"); }}>login</button>\r\n                                    <input type=\"input\" className=\"form-control\" value={user_name_value} onChange={(e) => { saveUsernameValue(e.target.value) }} id={date} placeholder=\"username\"></input>\r\n                                    <input type=\"password\" className=\"form-control\" value={password_value} onChange={(e) => { savePasswordValue(e.target.value) }} id={date} placeholder=\"password\"></input>\r\n                                    <div className=\"btn\" onClick={checkIntegrity}>\r\n                                        <input type=\"button\" value=\" sign in\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    // }\r\n}\r\nexport default Sign_In;"],"mappings":"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"},"metadata":{},"sourceType":"module"}