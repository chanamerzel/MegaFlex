{"ast":null,"code":"// import React, { Component, useEffect } from 'react';\n// import { useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import { Routes, Route, Link, Outlet } from 'react-router-dom';\n// // import Client_Product_List from \"./Client_Product_List\";\n// import Client_Current_Product from \"./Client_Current_Product\";\n// import Client_Shoping_Cart from \"./Client_Shoping_Cart\";\n// import Client_Nav from \"./Client_Nav\";\n// export default function Products_List(props) {\n//     const [products, setProducts] = useState([]);\n//     const [client, setClient] = useState(\"\");\n//     const [category, setCategory] = useState(\"\");\n//     const [mystyle, setMystyle] = useState({});\n//     let navigate = useNavigate();\n//     useEffect(() => {\n//         async function getProducts() {\n//             let prod = await fetch(\"http://localhost:3678/products\", {\n//                 method: 'GET'\n//             });\n//             let pro = await prod.json();\n//             setProducts(pro);\n//             // let mclient = await fetch(\"http://localhost:3678/client\", {\n//             //     method: 'GET'\n//             // });\n//             // let cli = await mclient.json();\n//             // setClient(pro);\n//             //get products from db and save in usestate\n//         }\n//         getProducts();\n//         setMystyle({\n//             color: \"#3aedff\",\n//             fontSize: \"20px\", marginLeft: \"330px\",\n//             marginTop: \"70PX\"\n//         });\n//         // return async () => {\n//         //     let up = await fetch('http://localhost:3678/cart/delete/allitem', {\n//         //         method: 'DELETE',\n//         //         headers: {\n//         //             'Accept': 'application/json',\n//         //             'Content-Type': 'application/json'\n//         //         },\n//         //         body: JSON.stringify({\n//         //             orderid: JSON.parse(sessionStorage.getItem(\"currentuser\")).OrderID\n//         //         })\n//         //     });\n//         //     let response = up.json();\n//             // if (JSON.parse(sessionStorage.getItem(\"currentuser\")).user_name != null) {\n//             //     let up = await fetch('http://localhost:3678/cart/cartUpdate', {\n//             //         method: 'PUT',\n//             //         headers: {\n//             //             'Accept': 'application/json',\n//             //             'Content-Type': 'application/json'\n//             //         },\n//             //         body: JSON.stringify({\n//             //             user_name: JSON.parse(sessionStorage.getItem(\"currentuser\")).user_name,\n//             //             password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password,\n//             //             cart: JSON.parse(sessionStorage.getItem(\"currentuser\")).cart\n//             //         })\n//             //     });\n//             //     alert('updated details and exit');\n//             // }\n//             // let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\n//             //     method: 'POST',\n//             //     headers: {\n//             //         'Accept': 'application/json',\n//             //         'Content-Type': 'application/json'\n//             //     },\n//             //     body: JSON.stringify({ password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password })\n//             // });\n//             // let prodb = await prod.json();\n//             // let prosession = JSON.parse(sessionStorage.getItem(\"currentuser\")).cart;\n//             // let isbool = false;\n//             // let post = [];\n//             // let update = [];\n//             // for (let i = 0; i < prosession.length; i++) {\n//             //     isbool = false;\n//             //     for (let j = 0; j < prodb.length; j++) {\n//             //         // const element = array[index];\n//             //         if (prosession[i] === prodb[j]) {\n//             //             isbool = true;\n//             //         }\n//             //     }\n//             //     if (isbool) {\n//             //         update.push(prosession[i]);\n//             //     }else{\n//             //         post.push(prosession[i]);\n//             //     }\n//             //     // const element = prosession[index];\n//             // }\n//             // let up = await fetch('http://localhost:3678/cart/cartUpdate', {\n//             //         method: 'PUT',\n//             //         headers: {\n//             //             'Accept': 'application/json',\n//             //             'Content-Type': 'application/json'\n//             //         },\n//             //         body: JSON.stringify({\n//             //             update:update,\n//             //             OrderID:JSON.parse(sessionStorage.getItem('currentuser')).OrderID\n//             //         })\n//             //     });\n//             // console.log(\"post \"+JSON.stringify(post)+\"  hh\");\n//         //     let postt = await fetch('http://localhost:3678/cart/insert', {\n//         //         method: 'POST',\n//         //         headers: {\n//         //             'Accept': 'application/json',\n//         //             'Content-Type': 'application/json'\n//         //         },\n//         //         body: JSON.stringify({\n//         //             post: JSON.parse(sessionStorage.getItem('currentuser')).cart,\n//         //             OrderID: JSON.parse(sessionStorage.getItem('currentuser')).OrderID\n//         //         })\n//         //     });\n//         //     let res=postt.json();\n//         // }\n//     }, []);\n//     async function categoryType(val) {\n//         setCategory(val);\n//         console.log(`val ${val}`);\n//         let codeC = await fetch(`http://localhost:3678/products/category/${val}`, {\n//             method: 'GET'\n//         });\n//         let codeCateg = await codeC.json();\n//         let catItems = await fetch(`http://localhost:3678/products/codecategory/${codeCateg[0].CategoryCode}`, {\n//             method: 'GET'\n//         });\n//         let allCatItems = await catItems.json();\n//         console.log(allCatItems);\n//         setProducts(allCatItems);\n//     };\n//     async function forShoppingCart() {\n//         console.log(products);\n//         navigate(\"/client/shopingCart\", { state: { products: products } });\n//     }\n//     async function toTheItem(myproduct) {\n//         // navigate(\"/client/shopingCart\", { state: {products:products} });\n//         navigate(`/client/currentProduct/${myproduct.CodeItem}`, { state: { products: products, CodeItem: myproduct.CodeItem, myproduct: myproduct } });\n//     }\n//     return (<div>\n//         {/* <Client_Nav /> */}\n//         <div className=\"\">\n//             <nav id=\"navs \">\n//                 <Link className=\"App-link\" style={mystyle} to={`/login`}>log in</Link>\n//                 <Link className=\"App-link\" style={mystyle} to={`/signin`}>sign in</Link>\n//                 {/* <Link className=\"App-link\" style={mystyle} to={`/manager/orderingList`}>orderingList</Link> */}\n//                 {/* <Link className=\"App-link\" style={mystyle} to={`/manager/profits`}>profits</Link> */}\n//             </nav>\n//             <Outlet />\n//         </div>\n//         <p className='title'>all items</p>\n//         {/* <div>{products.map((product) => product.ItemName)}</div> */}\n//         <br></br>\n//         <label className='title2'>categories: </label>\n//         {/* <select onChange={(e)=>{setCategory(e.target.value)}}> */}\n//         <div className=\"allS\">\n//             <div className=\"select\">\n//         <select onChange={(e) => { categoryType(e.target.value) }}>\n//             <option>heels</option>\n//             <option>flat</option>\n//             <option>sneakers</option>\n//             <option>sandals</option>\n//             <option>boots</option>\n//             <option>slippers</option>\n//         </select><br></br>\n//         </div>\n//         </div>\n//         <br></br>\n//         {products.map((myproduct) =>\n//         (<div key={myproduct.CodeItem}>\n//             {/* {myproduct.ItemName} */}\n//             {/* <Link to={`/client/currentProduct/${myproduct.CodeItem}`}>{myproduct.ItemName}</Link> */}\n//             <button onClick={() => { toTheItem(myproduct) }}>{myproduct.ItemName}</button>\n//             {/* <button>add to shopping cart</button> */}\n//         </div>)\n//         )}\n//         {/* <button onClick={(e) => { buymyproduct(e.target.value) }}>ADD TO SHOPING CART</button> */}\n//         {/* <Client_Product_List products={products} /> */}\n//         {/* <Routes>\n//             <Route path=\"/currentProduct/:itemCode\" element={< Client_Current_Product items={products} />}></Route>\n//         </Routes>\n//         <Outlet></Outlet> */}\n//         {/* <button onClick={forShoppingCart}>to shopping cart</button> */}\n//     </div>);\n// }","map":{"version":3,"names":[],"sources":["F:/client-side/apartments/src/components/Products_List.jsx"],"sourcesContent":["\r\n// import React, { Component, useEffect } from 'react';\r\n// import { useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import { Routes, Route, Link, Outlet } from 'react-router-dom';\r\n// // import Client_Product_List from \"./Client_Product_List\";\r\n// import Client_Current_Product from \"./Client_Current_Product\";\r\n// import Client_Shoping_Cart from \"./Client_Shoping_Cart\";\r\n// import Client_Nav from \"./Client_Nav\";\r\n// export default function Products_List(props) {\r\n//     const [products, setProducts] = useState([]);\r\n//     const [client, setClient] = useState(\"\");\r\n//     const [category, setCategory] = useState(\"\");\r\n//     const [mystyle, setMystyle] = useState({});\r\n\r\n//     let navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         async function getProducts() {\r\n//             let prod = await fetch(\"http://localhost:3678/products\", {\r\n//                 method: 'GET'\r\n//             });\r\n//             let pro = await prod.json();\r\n//             setProducts(pro);\r\n\r\n//             // let mclient = await fetch(\"http://localhost:3678/client\", {\r\n//             //     method: 'GET'\r\n//             // });\r\n//             // let cli = await mclient.json();\r\n//             // setClient(pro);\r\n//             //get products from db and save in usestate\r\n//         }\r\n//         getProducts();\r\n//         setMystyle({\r\n//             color: \"#3aedff\",\r\n//             fontSize: \"20px\", marginLeft: \"330px\",\r\n//             marginTop: \"70PX\"\r\n//         });\r\n//         // return async () => {\r\n\r\n//         //     let up = await fetch('http://localhost:3678/cart/delete/allitem', {\r\n//         //         method: 'DELETE',\r\n//         //         headers: {\r\n//         //             'Accept': 'application/json',\r\n//         //             'Content-Type': 'application/json'\r\n//         //         },\r\n//         //         body: JSON.stringify({\r\n//         //             orderid: JSON.parse(sessionStorage.getItem(\"currentuser\")).OrderID\r\n//         //         })\r\n//         //     });\r\n//         //     let response = up.json();\r\n\r\n//             // if (JSON.parse(sessionStorage.getItem(\"currentuser\")).user_name != null) {\r\n//             //     let up = await fetch('http://localhost:3678/cart/cartUpdate', {\r\n//             //         method: 'PUT',\r\n//             //         headers: {\r\n//             //             'Accept': 'application/json',\r\n//             //             'Content-Type': 'application/json'\r\n//             //         },\r\n//             //         body: JSON.stringify({\r\n//             //             user_name: JSON.parse(sessionStorage.getItem(\"currentuser\")).user_name,\r\n//             //             password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password,\r\n//             //             cart: JSON.parse(sessionStorage.getItem(\"currentuser\")).cart\r\n//             //         })\r\n//             //     });\r\n//             //     alert('updated details and exit');\r\n//             // }\r\n//             // let prod = await fetch(\"http://localhost:3678/cart/shopingCart\", {\r\n//             //     method: 'POST',\r\n//             //     headers: {\r\n//             //         'Accept': 'application/json',\r\n//             //         'Content-Type': 'application/json'\r\n//             //     },\r\n//             //     body: JSON.stringify({ password: JSON.parse(sessionStorage.getItem(\"currentuser\")).password })\r\n//             // });\r\n//             // let prodb = await prod.json();\r\n//             // let prosession = JSON.parse(sessionStorage.getItem(\"currentuser\")).cart;\r\n//             // let isbool = false;\r\n//             // let post = [];\r\n//             // let update = [];\r\n//             // for (let i = 0; i < prosession.length; i++) {\r\n//             //     isbool = false;\r\n//             //     for (let j = 0; j < prodb.length; j++) {\r\n//             //         // const element = array[index];\r\n//             //         if (prosession[i] === prodb[j]) {\r\n//             //             isbool = true;\r\n//             //         }\r\n\r\n//             //     }\r\n//             //     if (isbool) {\r\n//             //         update.push(prosession[i]);\r\n//             //     }else{\r\n//             //         post.push(prosession[i]);\r\n//             //     }\r\n//             //     // const element = prosession[index];\r\n//             // }\r\n//             // let up = await fetch('http://localhost:3678/cart/cartUpdate', {\r\n//             //         method: 'PUT',\r\n//             //         headers: {\r\n//             //             'Accept': 'application/json',\r\n//             //             'Content-Type': 'application/json'\r\n//             //         },\r\n//             //         body: JSON.stringify({\r\n//             //             update:update,\r\n//             //             OrderID:JSON.parse(sessionStorage.getItem('currentuser')).OrderID\r\n//             //         })\r\n//             //     });\r\n//             // console.log(\"post \"+JSON.stringify(post)+\"  hh\");\r\n//         //     let postt = await fetch('http://localhost:3678/cart/insert', {\r\n//         //         method: 'POST',\r\n//         //         headers: {\r\n//         //             'Accept': 'application/json',\r\n//         //             'Content-Type': 'application/json'\r\n//         //         },\r\n//         //         body: JSON.stringify({\r\n//         //             post: JSON.parse(sessionStorage.getItem('currentuser')).cart,\r\n//         //             OrderID: JSON.parse(sessionStorage.getItem('currentuser')).OrderID\r\n//         //         })\r\n//         //     });\r\n//         //     let res=postt.json();\r\n//         // }\r\n//     }, []);\r\n\r\n//     async function categoryType(val) {\r\n//         setCategory(val);\r\n//         console.log(`val ${val}`);\r\n//         let codeC = await fetch(`http://localhost:3678/products/category/${val}`, {\r\n//             method: 'GET'\r\n//         });\r\n//         let codeCateg = await codeC.json();\r\n\r\n//         let catItems = await fetch(`http://localhost:3678/products/codecategory/${codeCateg[0].CategoryCode}`, {\r\n//             method: 'GET'\r\n//         });\r\n//         let allCatItems = await catItems.json();\r\n//         console.log(allCatItems);\r\n//         setProducts(allCatItems);\r\n//     };\r\n//     async function forShoppingCart() {\r\n//         console.log(products);\r\n//         navigate(\"/client/shopingCart\", { state: { products: products } });\r\n//     }\r\n\r\n//     async function toTheItem(myproduct) {\r\n//         // navigate(\"/client/shopingCart\", { state: {products:products} });\r\n//         navigate(`/client/currentProduct/${myproduct.CodeItem}`, { state: { products: products, CodeItem: myproduct.CodeItem, myproduct: myproduct } });\r\n    \r\n//     }\r\n\r\n\r\n//     return (<div>\r\n//         {/* <Client_Nav /> */}\r\n//         <div className=\"\">\r\n//             <nav id=\"navs \">\r\n//                 <Link className=\"App-link\" style={mystyle} to={`/login`}>log in</Link>\r\n//                 <Link className=\"App-link\" style={mystyle} to={`/signin`}>sign in</Link>\r\n//                 {/* <Link className=\"App-link\" style={mystyle} to={`/manager/orderingList`}>orderingList</Link> */}\r\n//                 {/* <Link className=\"App-link\" style={mystyle} to={`/manager/profits`}>profits</Link> */}\r\n//             </nav>\r\n//             <Outlet />\r\n//         </div>\r\n//         <p className='title'>all items</p>\r\n//         {/* <div>{products.map((product) => product.ItemName)}</div> */}\r\n//         <br></br>\r\n//         <label className='title2'>categories: </label>\r\n//         {/* <select onChange={(e)=>{setCategory(e.target.value)}}> */}\r\n//         <div className=\"allS\">\r\n//             <div className=\"select\">\r\n//         <select onChange={(e) => { categoryType(e.target.value) }}>\r\n//             <option>heels</option>\r\n//             <option>flat</option>\r\n//             <option>sneakers</option>\r\n//             <option>sandals</option>\r\n//             <option>boots</option>\r\n//             <option>slippers</option>\r\n//         </select><br></br>\r\n//         </div>\r\n//         </div>\r\n\r\n\r\n\r\n//         <br></br>\r\n//         {products.map((myproduct) =>\r\n//         (<div key={myproduct.CodeItem}>\r\n//             {/* {myproduct.ItemName} */}\r\n//             {/* <Link to={`/client/currentProduct/${myproduct.CodeItem}`}>{myproduct.ItemName}</Link> */}\r\n//             <button onClick={() => { toTheItem(myproduct) }}>{myproduct.ItemName}</button>\r\n//             {/* <button>add to shopping cart</button> */}\r\n//         </div>)\r\n//         )}\r\n//         {/* <button onClick={(e) => { buymyproduct(e.target.value) }}>ADD TO SHOPING CART</button> */}\r\n\r\n//         {/* <Client_Product_List products={products} /> */}\r\n//         {/* <Routes>\r\n//             <Route path=\"/currentProduct/:itemCode\" element={< Client_Current_Product items={products} />}></Route>\r\n//         </Routes>\r\n//         <Outlet></Outlet> */}\r\n//         {/* <button onClick={forShoppingCart}>to shopping cart</button> */}\r\n//     </div>);\r\n// }"],"mappings},"metadata":{},"sourceType":"module"}